// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  username  String @unique
  email     String @unique
  status    String
  password  String
  profile   Profile?
  wallet    Wallet[]
  purchase  Purchase[]
  commission  Commission[]
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  relation_ref_id Int?
  relation_ref User? @relation("RefDownline", fields:[relation_ref_id], references: [id])
  ref_downlines User[] @relation("RefDownline")
  relation_placement_id Int?
  relation_placement User? @relation("PlacementDownline", fields:[relation_placement_id], references: [id])
  placement_downlines User[] @relation("PlacementDownline")
  placement_leg Int
  Token Token[]
  password_changed_at  DateTime?
  password_reset_token  String?
  password_reset_expires  DateTime?
}

model Token {
    id        String   @id @default(cuid())
    token     String   @unique
    type      String
    used      Boolean  @default(false)
    createdAt DateTime @default(now())
    expiredAt DateTime @default(now())
    user_id   Int
    user      User     @relation(fields: [user_id], references: [id])

}

model Commission{
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [user_id], references: [id])
  user_id Int
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  comm_code Commission_Code? @relation(fields: [comm_code_id], references: [id])
  comm_code_id Int 
  amount  Float
  purchase   Purchase   @relation(fields: [purchase_id], references: [id])
  purchase_id Int
}

model Commission_Code{
  id     Int    @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  commission Commission[]
  desc  String
  
}

model Purchase{
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [user_id], references: [id])
  user_id Int   
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  status String
  package Package @relation(fields: [package_id], references: [id])
  package_id Int    
  commission Commission[]
}

model Package{
  id     Int    @id @default(autoincrement())
  purchase   Purchase[]
  name  String
  status String
  cost  Float
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
}

model Profile {
  id     Int    @id @default(autoincrement())
  first_name    String
  last_name     String
  ic_no         String
  address       String
  country       String
  mobileno      String
  user   User   @relation(fields: [user_id], references: [id])
  user_id Int    @unique
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
}

model Wallet_Type{
  id     Int    @id @default(autoincrement())
  name  String
  status String
  wallet Wallet[] 
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
}

model Wallet {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [user_id], references: [id])
  user_id Int    
  wallet_type Wallet_Type @relation(fields: [wallet_type_id], references: [id])
  wallet_type_id Int
  transactions Transaction[]
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  amount Float
}

model Transaction{
  id     Int    @id @default(autoincrement())
  wallet Wallet @relation(fields: [wallet_id], references: [id])
  wallet_id Int
  amount Float
  balance Float
  type Transaction_Type 
  tcode Transaction_Code? @relation(fields: [tcode_id], references: [id])
  tcode_id Int 
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
}

model Transaction_Code{
  id     Int    @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  transaction Transaction[]
  desc  String
}

model Admin {
  id        Int    @id @default(autoincrement())
  username  String @unique
  email     String @unique
  status    String
  password  String
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @updatedAt @db.Timestamptz(6)
  priviledge  String
}
 
enum Transaction_Type {
  DEBIT
  CREDIT
}
